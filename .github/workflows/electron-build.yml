name: Build Electron App

on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: Build Electron App
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        # os: [macos-latest, windows-latest, ubuntu-latest]  # Uncomment to enable all platforms

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install System Dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev python3-tk python3-pil.imagetk

      - name: Install Python Dependencies
        run: |
          uv sync

      - name: Install Dependencies
        run: npm ci

      - name: Check Rust formatting
        run: cargo fmt -- --check

      - name: Check Prettier formatting
        run: npm run format:check

      - name: Check Python formatting
        run: uv run ruff format --check

      - name: Download requirements
        run: npm run package:download-requirements

      - name: Build recorder
        run: |
          cargo build --bin owl-recorder --release

      - name: Build Webpack
        run: npm run build

      - name: Build Electron App
        run: npm run package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            dist/**/*.dmg
            dist/**/*.exe
            dist/**/*.deb
            dist/**/*.AppImage
            dist/**/*.zip
            dist/*.exe
            dist/*.zip
          if-no-files-found: warn

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: |
          echo "=== All artifacts ==="
          ls -la artifacts/
          echo "=== Contents of each artifact ==="
          find artifacts -type f -name "*.exe" -o -name "*.zip" | head -20

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/OWL Control*
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
